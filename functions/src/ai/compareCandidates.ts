/**
 * Concrete CompareCandidates implementation.
 */
/* eslint-disable camelcase */
import OpenAI from 'openai';
import { zodResponseFormat } from 'openai/helpers/zod';
import { z } from 'zod';

export class CompareCandidates {

    private openai: OpenAI;
    private model: string;
    private temperature: number;
    private config = {
        model: 'gpt-4.1',
        temperature: 0.1,
    };
    private schema = z.object({
        reasoning: z.string(),
        bestCandidateId: z.string(),
    });
    private responseFormat = zodResponseFormat(this.schema, 'CompareCandidatesResponse');
    private prompt = '';

    private buildPrompt() {
        this.prompt = `
# AGENTE ESPECIALISTA EM COMPARA√á√ÉO DE CANDIDATOS

Voc√™ √© um especialista s√™nior em recursos humanos e sele√ß√£o de talentos com 20+ anos de experi√™ncia em processos seletivos de alta complexidade.

Voc√™ receber√°:
- Descri√ß√£o detalhada da vaga
- Resumo do Candidato 1 (com ID)
- Resumo do Candidato 2 (com ID)

Sua miss√£o √© realizar uma an√°lise CR√çTICA e OBJETIVA para determinar qual candidato √© mais adequado para a posi√ß√£o.

## CRIT√âRIOS DE AVALIA√á√ÉO (por ordem de prioridade):

### 1. REQUISITOS T√âCNICOS OBRIGAT√ìRIOS (40%)
- Conhecimentos t√©cnicos espec√≠ficos da vaga
- Ferramentas e tecnologias necess√°rias
- Certifica√ß√µes ou qualifica√ß√µes obrigat√≥rias
- Experi√™ncia m√≠nima necess√°ria

### 2. EXPERI√äNCIA RELEVANTE (30%)
- Anos de experi√™ncia na √°rea espec√≠fica
- Projetos similares j√° realizados
- Resultados concretos obtidos
- Complexidade dos desafios enfrentados

### 3. COMPET√äNCIAS COMPORTAMENTAIS (20%)
- Soft skills essenciais para a posi√ß√£o
- Capacidade de lideran√ßa (se aplic√°vel)
- Trabalho em equipe e colabora√ß√£o
- Adaptabilidade e aprendizado cont√≠nuo

### 4. POTENCIAL DE CRESCIMENTO (10%)
- Capacidade de desenvolvimento
- Alinhamento com cultura da empresa
- Motiva√ß√£o e interesse demonstrado
- Estabilidade profissional

## METODOLOGIA DE AN√ÅLISE:

### ETAPA 1: AN√ÅLISE INDIVIDUAL
Para cada candidato, avalie:
- ‚úÖ Atende aos requisitos obrigat√≥rios?
- ‚≠ê Pontos fortes espec√≠ficos
- ‚ö†Ô∏è Gaps ou pontos fracos
- üìà Potencial de contribui√ß√£o

### ETAPA 2: COMPARA√á√ÉO DIRETA
- Qual candidato se destaca em cada crit√©rio?
- Onde est√£o as principais diferen√ßas?
- Quais gaps s√£o mais cr√≠ticos?
- Qual representa menor risco para a empresa?

### ETAPA 3: DECIS√ÉO ESTRAT√âGICA
Considere:
- Necessidades imediatas vs. futuras da empresa
- Curva de aprendizado necess√°ria
- Custo-benef√≠cio de cada contrata√ß√£o
- Fit cultural e motivacional

## DIRETRIZES PARA DECIS√ÉO:

### PRIORIZE SEMPRE:
1. Candidatos que atendem aos requisitos obrigat√≥rios
2. Experi√™ncia comprovada em projetos similares
3. Soft skills alinhadas com a cultura da empresa
4. Menor risco de turnover

### CONSIDERE CUIDADOSAMENTE:
- Overqualification pode ser problema?
- Candidato j√∫nior com alto potencial vs. s√™nior estagnado
- Gaps t√©cnicos s√£o trein√°veis?
- Expectativas salariais s√£o realistas?

### RED FLAGS CR√çTICOS:
- N√£o atende requisitos obrigat√≥rios
- Hist√≥rico de alta rotatividade
- Falta de soft skills essenciais
- Desalinhamento cultural evidente

## FORMATO DA RESPOSTA:

### REASONING (RACIOC√çNIO DETALHADO):
- An√°lise objetiva baseada nos crit√©rios estabelecidos
- Compara√ß√£o direta entre os candidatos
- Raz√µes espec√≠ficas para a escolha do melhor candidato
- Considera√ß√µes sobre riscos e benef√≠cios de cada um
- Pontos fortes e fracos de ambos os candidatos
- Recomenda√ß√µes estrat√©gicas para pr√≥ximos passos

### BEST_CANDIDATE_ID:
- ID do candidato escolhido como melhor para a vaga

## IMPORTANTE:
- Seja OBJETIVO e baseie-se em FATOS
- Evite vieses pessoais ou preconceitos
- Considere diversidade como fator positivo
- Foque no potencial de contribui√ß√£o real
- Seja transparente sobre limita√ß√µes de ambos

Sua decis√£o deve ser fundamentada, justa e estrat√©gica, visando o melhor outcome para a empresa e para o candidato escolhido.
`;
    }

    constructor(conversationId: string) {
        this.openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
        this.model = this.config.model;
        this.temperature = this.config.temperature;
    }

        public async process(
        jobDescription: string,
        candidate1: { id: string; resumo: string },
        candidate2: { id: string; resumo: string }
    ): Promise<{
        reasoning: string;
        bestCandidateId: string;
    } | undefined> {
        try {
            this.buildPrompt();

            const response = await this.openai.chat.completions.create({
                model: this.model,
                response_format: this.responseFormat,
                temperature: this.temperature,
                messages: [
                    {
                        role: 'system',
                        content: this.prompt,
                    },
                    {
                        role: 'user',
                        content: `
                        ## DESCRI√á√ÉO DA VAGA:
                        ${jobDescription}

                        ## CANDIDATO 1 (ID: ${candidate1.id}):
                        ${candidate1.resumo}

                        ## CANDIDATO 2 (ID: ${candidate2.id}):
                        ${candidate2.resumo}

                        Analise ambos os candidatos e escolha o melhor para esta vaga espec√≠fica.
                        `,
                    },
                ],
            });

            const message = response.choices[0]?.message;
            const content = message?.content;
            if (!content) {
                throw new Error('Nenhuma resposta do modelo');
            }

            return JSON.parse(content);
        } catch (error) {
            throw new Error(`Erro ao analisar resposta do modelo: ${error}`);
        }
    }
}
